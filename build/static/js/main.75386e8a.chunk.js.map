{"version":3,"sources":["actions/appStateActions.js","reducers/appStateReducer.js","appConfig.js","api/visits.js","actions/visitActions.js","actions/searchActions.js","reducers/searchReducer.js","reducers/visitReducer.js","actions/mapActions.js","reducers/mapReducer.js","reducers/index.js","components/searchBar.js","components/table.js","components/marker.js","components/map.js","containers/mainView.js","App.js","index.js"],"names":["UPDATE_VIEW","SET_LOADING","setLoading","loading","type","initialState","availableViews","view","visitReducer","state","arguments","length","undefined","action","Object","assign","appConfig","visitServerEndpoint","fetchVisits","filters","url","concat","params","isEmpty","i","param","substr","_filtersToUri","axios","then","res","success","data","catch","err","response","UPDATE_VISITS","SET_SELECTED_VISIT","fetchAndStoreVisits","store","dispatch","visits","UPDATE_QUERY","searchOnKeyword","keyword","getState","search","query","ip","city","country_code","country_name","region_code","time_zone","zip_code","visit_date","query_type","selectedVisit","visit","UPDATE_POSITION","UPDATE_ZOOM","position","zoom","Reducer","combineReducers","appState","map","logger","createLogger","collapsed","diff","createStore","applyMiddleware","SearchBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleInputChange","bind","assertThisInitialized","event","target","value","_this2","react_default","a","createElement","id","TextField_default","margin","onChange","onKeyPress","ev","key","disabled","preventDefault","placeholder","style","width","padding","Button_default","variant","color","onClick","React","Component","styles","root","marginTop","overflowX","table","minWidth","columns","display","VisitTable","_handleRowClick","setSelectedVisit","Paper_default","Table_default","TableHead_default","TableRow_default","col","colId","TableCell_default","TableBody_default","vId","hover","href","lib_default","date","live","MarkerComponent","Circle","center","latitude","longitude","radius","opacity","Marker","Popup","_generatePopup","leafletMap","height","MapComponent","testingMode","leafletElement","on","getZoom","_","uniqBy","className","Map","ref","m","clas","TileLayer","attribution","marker","MainView","_getIconHelper","_handleTabChange","tabIndex","tabSelected","tab","List_default","LocationOn_default","searchBar","AppBar_default","Tabs_default","indexOf","indicatorColor","textColor","centered","Tab_default","label","icon","CircularProgress_default","size","thickness","Typography_default","component","connect","App","es","mainView","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.75386e8a.chunk.js","sourcesContent":["// appStateActions.js\n\n/**\n * actions updating the curren app's state\n * created by David Goldstein on 2/8/2018\n **/\n\n// updates which view the app is in\nexport const UPDATE_VIEW = 'UPDATE_VIEW';\nexport function updateView(view) {\n  return {\n    type: UPDATE_VIEW,\n    view : view\n  };\n}\n\nexport const SET_LOADING = 'SET_LOADING';\nexport function setLoading(loading) {\n  return {\n    type: SET_LOADING,\n    loading : loading\n  };\n}","// appStateReducer.js\n\nimport { \n  SET_LOADING,\n  UPDATE_VIEW\n } from '../actions/appStateActions';\n\nconst initialState = {\n  availableViews : [\"visits\", \"map\"], // list of views available \n  loading : false, // the app is / isn't loading\n  view : \"visits\" // the current view\n};\n\nconst visitReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // set when the app is loading\n    case SET_LOADING:\n      return Object.assign({}, state, {\n        loading : action.loading === undefined ? false : action.loading\n      })\n  \t// update where the user is currently looking\n    case UPDATE_VIEW:\n      return Object.assign({}, state, {\n        view : action.view\n      })\n    default:\n    \treturn state;\n  }\n};\n\nexport default visitReducer;","// appConfig.js\n\n// stores internal configuration for app\n\nexport default {\n\t// visitServerEndpoint : \"http://localhost:5000/visits\"\n  visitServerEndpoint : \"/api/metrics/\"\n}","// visits.js\n\n// app Configuration\nimport appConfig from '../appConfig';\n\n// library to make calls\nimport * as axios from 'axios';\n\n/**\n * API logic and requests with dgoldstein1/websiteAnalytics-backend\n * created by David Goldstein on 2/8/17\n **/\n\n\n/**\n * fetches visits from API. The workhorse of the app.\n * @param {json} filters (i.e. {region_code : MA})\n * @param {json} testing params (callback) used in order to avoid mocking requests\n * \n * @return {Promise} {data : response from api, success : success?, err : err from api}\n **/\nexport function fetchVisits(filters = {}) {\n\tlet url = `${appConfig.visitServerEndpoint}/${_filtersToUri(filters)}`\n\n\treturn axios.get(url)\n\t\t.then(res => {\n\t\t\treturn {success : true, data : res.data};\n\t\t})\n\t\t.catch(err => {\n\t\t\treturn {success : false, err : err.response.data};\n\t\t})\n}\n\n/**\n * helper function which converts filter object into uri query string\n * Note -- only exported for testing\n * \n * @param {json} visit filters\n * @return {string} (e.g. '?region_code=MA')\n **/\nexport function _filtersToUri(filters = {}) {\n\tlet params = '';\n\n\t// if empty filters with only query_type, return empty string\n\tlet isEmpty = true\n\tfor (let i in filters) {\n\t\tif (filters[i] && i !== 'query_type')\n\t\t\tisEmpty = false\n\t}\n\tif (isEmpty) return params;\n\n\t// else add all params to query string\n\tfor (let param in filters) {\n\t\tparams += `&${param}=${filters[param]}`\n\t}\n\t// if we've added things, we need to put a question mark on the beginning\n\tif (params.length > 0)\n\t\tparams = '?' + params.substr(1, params.length);\n\n\n\treturn params;\n}","// visitActions.js\n\n// redux store\nimport { store } from '../reducers/index';\n\n// api\nimport { fetchVisits } from '../api/visits';\n\n// actions\nimport { setLoading } from './appStateActions'\n\n/**\n * the actions for fetching, updating, and storing visits \n * created by David Goldstein on 2/8/2018\n **/\n\nexport const UPDATE_VISITS = 'UPDATE_VISITS';\nexport function updateVisits(visits) {\n  return {\n    type: UPDATE_VISITS,\n    visits : visits\n  };\n}\n\nexport const SET_SELECTED_VISIT = 'SET_SELECTED_VISIT';\nexport function setSelectedVisit(visit) {\n  return {\n    type: SET_SELECTED_VISIT,\n    visit : visit\n  };\n}\n\n/**\n * fetches and stores visits to store.visits.visits\n * @param {json} filters (uses store.search.filters) by default\n * @param {function} callback on success / error\n **/\nexport function fetchAndStoreVisits(filters, callback = () => {}) {\n  store.dispatch(setLoading(true))\n\tfetchVisits(filters).then(res => {\n    if (res.success && res.data !== undefined) {\n      store.dispatch(updateVisits(res.data))\n    }\n    store.dispatch(setLoading(false))\n\t})\n}","// searchActions.js\n\n// store\nimport { store } from '../reducers/index';\n\n// actions\nimport { fetchAndStoreVisits } from './visitActions';\n\n/**\n * actions for updating search query and filters\n * created by David Goldstein on 2/8/2018\n **/\n\n// updates which view the app is in\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\nexport function updateQuery(query) {\n  return {\n    type: UPDATE_QUERY,\n    query : query\n  };\n}\n\n// fetches OR query using keyword in search\nexport function searchOnKeyword() {\n  let keyword = store.getState().search.query;\n  // all string filters (i.e. excluding metro_code, lat + lon)\n  let filters = {\n    \"ip\" : keyword,\n    \"city\" : keyword,\n    \"country_code\" : keyword,\n    \"country_name\" : keyword,\n    \"region_code\" : keyword,\n    \"time_zone\" : keyword,\n    \"zip_code\" : keyword,\n    \"visit_date\" : keyword,\n    \"query_type\" : \"or\"\n  };\n  return fetchAndStoreVisits(filters);\n}","// searchReducer.js\n\nimport { UPDATE_QUERY } from '../actions/searchActions';\n\nconst initialState = {\n  query : \"\" // current visits the user is looking at\n};\n\nconst visitReducer = (state = initialState, action) => {\n  switch (action.type) {\n  \t// update the current search keyword in store\n    case UPDATE_QUERY:\n      return Object.assign({}, state, {\n        query : action.query\n      })      \n    default:\n    \treturn state;\n  }\n};\n\nexport default visitReducer;","// visitReducer.js\n\nimport { UPDATE_VISITS, SET_SELECTED_VISIT } from '../actions/visitActions';\n\nconst initialState = {\n  visits : [], // current visits the user is looking at\n  selectedVisit : {} // the visit currently selected\n};\n\nconst visitReducer = (state = initialState, action) => {\n  switch (action.type) {\n  \t// update all current visits in store\n    case UPDATE_VISITS:\n      return Object.assign({}, state, {\n        visits : action.visits\n      })\n    case SET_SELECTED_VISIT:\n      return Object.assign({}, state, {\n        selectedVisit : action.visit\n      })   \n    default:\n    \treturn state;\n  }\n};\n\nexport default visitReducer;","// mapActions.js\n\n/**\n * actions updating the state of the map\n * created by David Goldstein on 2/8/2018\n **/\n\n// updates which view the app is in\nexport const UPDATE_POSITION = 'UPDATE_POSITION';\nexport function setPosition(position) {\n  return {\n    type: UPDATE_POSITION,\n    position : position,\n  };\n}\n\nexport const UPDATE_ZOOM = 'UPDATE_ZOOM';\nexport function setZoom(zoom) {\n  return {\n    type: UPDATE_ZOOM,\n    zoom : zoom\n  };\n}","// mapReducers.js\n\nimport { \n  UPDATE_POSITION,\n  UPDATE_ZOOM\n } from '../actions/mapActions';\n\nconst initialState = {\n  position : [38.87900161743164, -76.98979949951172],\n  zoom : 3\n};\n\nconst visitReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // set when the app is loading\n    case UPDATE_POSITION:\n      return Object.assign({}, state, {\n        position : action.position\n      })\n    // update where the user is currently looking\n    case UPDATE_ZOOM:\n      return Object.assign({}, state, {\n        zoom : action.zoom\n      })\n    default:\n      return state;\n  }\n};\n\nexport default visitReducer;","// index.js\n\n// redux utils\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\n\n// reducers in this directory\nimport appState from'./appStateReducer';\nimport search from './searchReducer';\nimport visits from './visitReducer';\nimport map from './mapReducer';\n\nconst Reducer = combineReducers({\n\tappState,\n  map,\n\tsearch,\n  visits\n});\n\nconst logger = createLogger({\n  collapsed : true,\n  diff : true\n})\n\nconst store = createStore(Reducer, applyMiddleware(logger));\n\nexport { store };","// searchBar.js\n\n// react\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// material ui\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n// actions\nimport { \n  updateQuery,\n  searchOnKeyword\n } from '../actions/searchActions';\n\n// store\nimport { store } from '../reducers/index';\n\n/**\n * Displays interactive search bar for user to make requests to visits\n * based mostly off of https://www.npmjs.com/package/material-ui-search-bar\n *\n * Created by David Goldstein on 2/8/18\n **/\n\nclass SearchBar extends React.Component {\n\n  constructor(props) {\n    super(props)\n    // bind internal methods\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  /**\n   * updates store with new keywords from search bar\n   * @param {event}\n   **/\n  _handleInputChange(event, testingConfig = {}) {\n    if (event && event.target && event.target.value !== undefined)\n      store.dispatch(updateQuery(event.target.value))\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"search-bar\">\n\t\t\t\t<TextField\n          id={'search-bar-input'}\n          type=\"search\"\n          margin=\"normal\"\n          onChange={this._handleInputChange}\n          onKeyPress={(ev) => {\n            if (ev.key === 'Enter' && !this.props.disabled) {\n              searchOnKeyword()\n              ev.preventDefault();\n            }\n          }}\n          placeholder=\"Search 'Israel', '02067', 'MN', 'Boston'\"\n          style={{width : 600, padding : 15}}\n          disabled={this.props.disabled}\n        />\n        <Button\n          id={'search-bar-button'}\n          variant=\"raised\"\n          color=\"primary\"\n          onClick={searchOnKeyword}\n          disabled={this.props.disabled}\n        >\n          Search\n        </Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearchBar.propTypes = {\n  query : PropTypes.string.isRequired,\n  disabled : PropTypes.bool.isRequired\n}\n\nexport default SearchBar;","// table.js\n\n// react\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// time ago\nimport TimeAgo from 'react-timeago';\n\n// material ui\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Paper from '@material-ui/core/Paper';\n\n// store\nimport { store } from '../reducers/index';\n\n// actions\nimport { setSelectedVisit } from '../actions/visitActions';\n\n/**\n * displays material UI table of data in store.visits\n *\n * Created by David Goldstein on 2/9/18\n **/\n\n// columns for table. Exported for testing\nconst styles = {\n  root: {\n    width: '100%',\n    marginTop: 8 * 3,\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n};\n\n// columns for table. Exported for testing\nexport const columns = [\n  { display: 'Ip Address', key: 'ip' },\n  { display: 'City', key: 'city' },\n  { display: 'State or Region', key: 'region_code' },\n  { display: 'Country', key: 'country_code' },\n  { display: 'Visit Date', key: 'visit_date' },\n  { display : 'Ref', key : 'href'}\n];\n\nclass VisitTable extends React.Component {\n  constructor(props) {\n    super(props);\n    // bound methods\n    this._handleRowClick = this._handleRowClick.bind(this);\n  }\n\n  /**\n   * handler for when the user clicks a row\n   * @param {json} visit\n   **/\n  _handleRowClick(visit) {\n    if (\n      this.props.visits.selectedVisit === undefined ||\n      this.props.visits.selectedVisit.visit_date !== visit.visit_date\n    )\n      store.dispatch(setSelectedVisit(visit));\n  }\n\n  render() {\n    return (\n      <Paper style={styles.root}>\n        <Table style={styles.table}>\n          <TableHead>\n            <TableRow>\n              {columns.map((col, colId) => {\n                return <TableCell key={colId}>{col.display}</TableCell>;\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.visits.visits.map((visit, vId) => {\n              return (\n                <TableRow\n                  hover\n                  key={vId}\n                  onClick={() => this._handleRowClick(visit)}\n                >\n                  {columns.map((col, colId) => {\n                    if (col.key === \"href\") {\n                      // remove '?' if any\n                      visit.href = visit.href.substr(1)\n                    }\n                    if (col.key === 'visit_date') {\n                      return (\n                        <TableCell key={colId}>\n                          <TimeAgo date={visit['visit_date']} live={true} />\n                        </TableCell>\n                      );\n                    }\n                    return <TableCell key={colId}>{visit[col.key]}</TableCell>;\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nVisitTable.propTypes = {\n  visits: PropTypes.object.isRequired\n};\n\nexport default VisitTable;\n","// marker.js\n\n// React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TimeAgo from 'react-timeago';\n\n// leaflet\nimport { Marker, Popup, Circle } from 'react-leaflet';\n\n/**\n * The leaflet marker on the map which displays where a visit is\n * Created by David Goldstein on 2.24.18\n **/\n\n/**\n * generates html to be displayed when user clicks a marker\n * @return {html} for this visit\n **/\nexport const _generatePopup = function(visit) {\n  return (\n    <div>\n      <h3>\n        <TimeAgo date={visit['visit_date']} live={true} />\n      </h3>\n      <h5>\n        City : {visit['city']}, {visit['region_code']} {visit['zip_code']} {visit['country_code']}\n        <br/>\n        Lat, Lon : {visit['latitude']},{visit['longitude']}\n        <br/>\n        Ip Address : {visit['ip']}\n        <br/>\n        GMT : {visit['visit_date']}\n      </h5>\n    </div>\n  ) \n}\n\nclass MarkerComponent extends React.Component {\n\n  render() {\n    const visit = this.props.visit;\n    return (\n      <Circle center={[visit.latitude, visit.longitude]} color=\"#3f51b5\" radius={2000} opacity={.001}>\n        <Marker position={[visit.latitude, visit.longitude]} color={\"#3f51b5\"}>\n          <Popup>\n            {_generatePopup(visit)}\n          </Popup>\n        </Marker>\n      </Circle>\n    );\n  }\n\n}\n\nMarkerComponent.propTypes = {\n  // the visit to render\n  visit : PropTypes.object.isRequired\n};\n\nexport default MarkerComponent;","// map.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// leaflet\nimport { Map, TileLayer } from 'react-leaflet';\nimport Marker from './marker'\n\n// css\nimport 'leaflet/dist/leaflet.css';\nimport '../css/MainView.css';\n\n// actions\nimport { setPosition, setZoom } from '../actions/mapActions';\n\n// store\nimport { store } from '../reducers/index';\n\n// utils\nimport _ from 'lodash';\n\n/**\n * displays leaflet map of data in store.visits\n * can't use 'map' because that is tied to nativeCode\n *\n * Created by David Goldstein on 2/9/18\n **/\n\nconst styles = {\n  leafletMap: {\n    height: 400,\n    width: 1000,\n    padding: '100px'\n  }\n};\n\nclass MapComponent extends React.Component {\n\n  componentDidMount() {\n    // testing does not like rendering leaflet\n    if (this.props.testingMode === true) return;\n    // initialize leaflet handlers -> reduce\n    const leafletMap = this.leafletMap.leafletElement;\n    // todo: this creates a bug when the markers are open\n    // on move\n    // leafletMap.on('move',() => {\n    //   leafletMap.closePopup();\n    //   let center = [\n    //     leafletMap.getCenter()['lat'],\n    //     leafletMap.getCenter()['lng']\n    //   ]\n    //   store.dispatch(setPosition(center));\n    // })\n    // on zoom\n    leafletMap.on('zoomend', () => {\n      store.dispatch(setZoom(leafletMap.getZoom()));\n    });\n  }\n\n  render() {\n\n    let position = this.props.visits[0] !== undefined\n      ? [this.props.visits[0].latitude, this.props.visits[0].longitude]\n      : this.props.map.position\n\n    return (\n      <div>\n        <h1> Showing {this.props.visits.length} visits to your website from {_.uniqBy(this.props.visits, 'ip').length} distinct IP Addresses</h1>\n        <div className={'map-component'} id={'map-component'}>\n          <Map\n            ref={m => { this.leafletMap = m; }}\n            clas={'leaflet-map'}\n            zoom={this.props.map.zoom}\n            center={position}\n            style={styles.leafletMap}\n          >\n            <TileLayer\n              attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {this.props.visits.map((visit, key) => {\n              return (\n                <Marker visit={visit} key={key}/>  \n              );\n            })}\n          </Map>\n        </div>\n      </div>\n    );\n  }\n}\n\nMapComponent.propTypes = {\n  visits: PropTypes.array.isRequired,\n  map : PropTypes.object.isRequired,\n};\n\nexport default MapComponent;\n","/* eslint-disable import/first */\n\n// mainView.js\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// material ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';;\n\n// icons\nimport List from '@material-ui/icons/List';\nimport LocationOn from '@material-ui/icons/LocationOn';\n// import FormatListBulleted from 'material-ui-icons/FormatListBulleted';\n\n// children components\nimport SearchBar from '../components/searchBar';\nimport Table from '../components/table';\nimport MapComponent from '../components/map';\n\n// css\nimport '../css/MainView.css'\n\n// actions\nimport { updateView } from '../actions/appStateActions';\n\n/**\n * Container for two material ui tabs, one containing map\n * the other containing the list view, and the search bar\n *\n * Created by David Goldstein on 8/9/2018\n **/\n\nclass MainView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // bind methods\n    this._getIconHelper = this._getIconHelper.bind(this);\n    this._handleTabChange = this._handleTabChange.bind(this);\n  }\n\n  /**\n   * handler for when the user clicks on a tab\n   * @param {html} event.target\n   * @param {int} tabIndex\n   **/\n  _handleTabChange(event, tabIndex) {\n    // get name of tab clicked\n    let tabSelected = this.props.appState.availableViews[tabIndex];\n    // verify that it's a real view\n    if (tabSelected) {\n      // update view in appState\n      this.props.dispatch(updateView(tabSelected));\n    } else { // tab is undefined\n      throw(\"Could not find tab with index \" + tabIndex)\n    }\n  }\n\n  /**\n   * helper for getting the name of an icon\n   * @param {string} view\n   * @return {html} icon from material ui\n   **/\n  _getIconHelper(tab) {\n    if (tab === 'visits') return <List/>\n    if (tab === 'map') return <LocationOn/>\n    return undefined;\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"main-view-controller\">\n        <SearchBar\n          query={this.props.search.query}\n          disabled={this.props.appState.loading}\n        />\n        {/* Bar containing tabs */}\n\t\t\t\t<AppBar position=\"static\" color=\"default\" id=\"app-bar\">\n          <Tabs\n            value={this.props.appState.availableViews.indexOf(this.props.appState.view)}\n            onChange={this._handleTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            {this.props.appState.availableViews.map((view, key) => \n              <Tab\n                label={view}\n                key={key}\n                id={view}\n                icon={this._getIconHelper(view)}\n                disabled={this.props.appState.loading}\n              />\n            )}\n          </Tabs>\n        </AppBar>\n        {/* display only loading icon if currently loading */ }\n        {this.props.appState.loading && \n          <CircularProgress\n            id={'loading-spinner'}\n            color=\"primary\"\n            style={{padding : 100}}\n            size={200}\n            thickness={1}\n          />\n        }\n        {/* display table on visits view */}\n        {!this.props.appState.loading && this.props.appState.view === 'visits' &&\n          <Typography component=\"div\" style={{padding : 24}}>\n            <Table\n              visits={this.props.visits}\n            />\n          </Typography>\n        }\n        {/* display map on map view */}\n        {!this.props.appState.loading && this.props.appState.view === 'map' &&\n          <Typography component=\"div\" style={{padding : 24}}>\n            <MapComponent\n              visits={this.props.visits.visits}\n              map={this.props.map}\n            />\n          </Typography>\n        }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// connect to store\nlet mapStateToProps = state => state;\nexport default connect(mapStateToProps)(MainView);","// react + redux\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport { store } from './reducers/index';\n\n// containers\nimport MainView from './containers/mainView';\n\n// actions\nimport { fetchAndStoreVisits } from './actions/visitActions';\n\nclass App extends Component {\n\n\n  /**\n   * what is done on first load\n   *\n   * - fetches and stores visits with no filters\n   **/\n  componentWillMount() {\n    fetchAndStoreVisits();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <MainView/>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}